# convert.py
# Written by Xinyan Xiang, Oct 21, 2021

import csv

# Orginal csv files
athlete_events_filename = "athlete_events.csv"
noc_regions_filename = "noc_regions.csv"

# csv files generated by this code 
athletes = "athletes.csv"
games = "games.csv"
events = "events.csv"
nocs = "nocs.csv"
athletes_games_noc_biometrics = "athletes_games_noc_biometrics.csv"
athletes_games_medal = "athletes_games_medal.csv"

# column name for each generated csv file 
athletes_fields = ['id','surname', 'given_name', 'sex']
games_fields = ['id','game_name', 'year', 'season',"city"]
events_fields = ['id','event_name', "sport"]
nocs_fields = ['id','noc',"region"]
athletes_games_noc_biometrics_fields = ["athletes_id","game_id","noc_id","age","height","weight"]
athletes_games_medal_fields = ["athletes_id","game_id","event_id","medal"]

# dictionary for events.csv, nocs.csv, and athletes.csv
athletes_id = {}
games_list = {}
events_list = {}
nocs_list = {}

# Create events.csv with columns: 'id','event_name', "sport"
with open(athlete_events_filename, 'r') as athlete_events_file:
    athlete_events_reader = csv.reader(athlete_events_file)
    header = next(athlete_events_reader)
    with open(events, 'w') as events_file:
        events_writer = csv.writer(events_file)
        event_id = 1
        for athlete_events_row in athlete_events_reader:
            event_name = athlete_events_row[13] 
            if event_name not in events_list:
                sport = athlete_events_row[12]
                events_writer.writerow([event_id,event_name,sport])
                events_list[event_name] = event_id
                event_id = event_id + 1
    events_file.close()
athlete_events_file.close()

# Create games.csv with columns: 'id','game_name', 'year', 'season',"city"
with open(athlete_events_filename, 'r') as athlete_events_file:
    athlete_events_reader = csv.reader(athlete_events_file)
    header = next(athlete_events_reader)
    with open(games, 'w') as games_file:
        games_writer = csv.writer(games_file)
        game_id = 1
        for athlete_events_row in athlete_events_reader:
            game_name = athlete_events_row[8]
            if game_name not in games_list:
                year = athlete_events_row[9]
                season = athlete_events_row[10]
                city = athlete_events_row[11]
                games_writer.writerow([game_id,game_name,year,season,city])
                games_list[game_name] = game_id
                game_id = game_id + 1 
    games_file.close()
athlete_events_file.close()
  
# Create athletes.csv: 'id','surname', 'given_name', 'sex'
with open(athlete_events_filename, 'r') as athlete_events_file:
    athlete_events_reader = csv.reader(athlete_events_file)
    header = next(athlete_events_reader)
    with open(athletes, 'w') as athletes_file:
        athletes_writer = csv.writer(athletes_file)
        for athlete_events_row in athlete_events_reader:
            if athlete_events_row[0] not in athletes_id:
                athlete_name = athlete_events_row[1].split(" ")
                if "(" in athlete_name[-1]:
                    athlete_surname = athlete_name[-2] + " " + athlete_name[-1]
                else:
                    athlete_surname = athlete_name[-1]
                athlete_given_name = athlete_name[0]
                athletes_id[athlete_events_row[0]] = athlete_events_row[1]
                athletes_writer.writerow([athlete_events_row[0],athlete_surname,athlete_given_name,athlete_events_row[2]])
    athletes_file.close()
athlete_events_file.close()
 
# Create nocs.csv with columns: 'id','noc',"region"
with open(noc_regions_filename, 'r') as noc_regions_file:
    noc_regions_reader = csv.reader(noc_regions_file)
    header = next(noc_regions_reader)
    with open(nocs, 'w') as nocs_file:
        nocs_writer = csv.writer(nocs_file)
        noc_id = 1
        for noc_regions_row in noc_regions_reader: 
            noc = noc_regions_row[0]     
            if noc not in nocs_list:
                region = noc_regions_row[1]
                nocs_writer.writerow([noc_id,noc,region])
                nocs_list[noc] = noc_id
                noc_id = noc_id + 1
    nocs_file.close()
noc_regions_file.close()

# lists or dictionaries used or athletes_games_noc_biometrics.csv and athletes_games_medal.csv
athletes_games_list = {}
athletes_games_events_list = {}
games_information_list = []
nocs_information_list = []
events_information_list = []

# Open and read games.csv, nocs.csv, and events.csv 
with open(games, 'r') as games_file:
     games_reader = csv.reader(games_file)
     for game_row in games_reader:
         games_information_list.append(game_row[1])
with open(nocs, 'r') as nocs_file:
     nocs_reader = csv.reader(nocs_file)
     for noc_row in nocs_reader:
         nocs_information_list.append(noc_row[1])
with open(events, 'r') as events_file:
     events_reader = csv.reader(events_file)
     for event_row in events_reader:
         events_information_list.append(event_row[1])

# Create athletes_games_noc_biometrics.csv with columns: "athletes_id","game_id","noc_id","age","height","weight"
with open(athlete_events_filename, 'r') as athlete_events_file:
    athlete_events_reader = csv.reader(athlete_events_file)
    header = next(athlete_events_reader)
    with open(athletes_games_noc_biometrics, 'w') as athletes_games_noc_biometrics_file:
        athletes_games_noc_biometrics_writer = csv.writer(athletes_games_noc_biometrics_file) 
        for athlete_events_row in athlete_events_reader:
            if (athlete_events_row[8],athlete_events_row[1]) not in athletes_games_list:
                athlete_id = athlete_events_row[0]
                age = athlete_events_row[3]
                height = athlete_events_row[4]
                weight = athlete_events_row[5]
                game_id = games_information_list.index(athlete_events_row[8]) + 1
                noc_id = nocs_information_list.index(athlete_events_row[7]) + 1
                athletes_games_noc_biometrics_writer.writerow([athlete_id,game_id,noc_id,age,height,weight])
                athletes_games_list[(athlete_events_row[8],athlete_events_row[1])] = athlete_id
    athletes_games_noc_biometrics_file.close()
athlete_events_file.close()

# Create athletes_games_medal.csv with columns: "athletes_id","game_id","event_id","medal"
with open(athlete_events_filename, 'r') as athlete_events_file:
    athlete_events_reader = csv.reader(athlete_events_file)
    header = next(athlete_events_reader)
    with open(athletes_games_medal, 'w') as athletes_games_medal_file:
        athletes_games_medal_writer = csv.writer(athletes_games_medal_file)   
        for athlete_events_row in athlete_events_reader:
            if (athlete_events_row[8],athlete_events_row[1],athlete_events_row[13]) not in athletes_games_events_list:
                athlete_id = athlete_events_row[0]
                game_id = games_information_list.index(athlete_events_row[8]) + 1
                event_id = events_information_list.index(athlete_events_row[13]) + 1
                medal = athlete_events_row[14]
                athletes_games_medal_writer.writerow([athlete_id,game_id,event_id,medal])
                athletes_games_events_list[(athlete_events_row[8],athlete_events_row[1],athlete_events_row[13])] = athlete_id 
    athletes_games_medal_file.close()
athlete_events_file.close()